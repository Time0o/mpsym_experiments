#!/usr/bin/env Rscript

suppressMessages(library(hash))

source('../modules/parse_data.R')
source('../modules/plot_data.R')
source('../modules/transform_columns.R')

# parse arguments
args <- parseArgs()

# read data
d <- readData(args$data_dir,
              c('board', 'implementation', 'schreier_sims_method'))

d$implementation = paste(d$implementation, d$schreier_sims_method)
d$schreier_sims_method = NULL

# clean data
removeOutliers <- function(d) {
    for (board in unique(d$board)) {
        for (implementation in unique(d$implementation)) {
            sel <- d$board == board & d$implementation == implementation

            r <- d[sel,]$runtime

            cond <- abs(d$runtime - mean(r)) > 6 * sd(r)

            if (any(sel & cond))
                d[sel & cond,]$runtime <- NA
        }
    }

    d
}

d <- removeOutliers(d)

d <- transformColumns(d, 'board',
    translate(hash(c('exynos', 'parallella', 'haec'),
                   c('Exynos', 'Parallella', 'HAEC'))))

d <- transformColumns(d, 'implementation',
    translate(hash(c('mpsym deterministic',
                     'mpsym random',
                     'mpsym random_no_guarantee',
                     'gap deterministic'),
                   c('Deterministic (\\texttt{mpsym})',
                     'Random (\\texttt{mpsym})',
                     'Random + deterministic (\\texttt{mpsym})',
                     'Deterministic (GAP)'))))

# create plot
cat("creating plots\n")

createBoxplot(list(d),
              x='board',
              y='runtime', ylabel='$t/s$',
              z='implementation',
              titles=list('BSGS Construction'),
              plot_dir=args$plot_dir, plot_name='bsgs')

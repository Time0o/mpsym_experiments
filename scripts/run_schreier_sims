#!/bin/bash

if [ $# -ne 1 ]; then
  >&2 echo "usage: $0 RESULT_DIR"
  exit 1
fi

LUA_PATH="../resources/resources/?.lua"

NUM_DISCARDED_RUNS=10
NUM_RUNS=1000

RESULT_DIR="$1"

run_schreier_sims() {
  board="${1%_naive}"
  implementation="$2"
  schreier_sims_="$3"

  if [[ "$schreier_sims" == *-dont-reduce-arch-graph ]]; then
    schreier_sims="${schreier_sims_%-dont-reduce-arch-graph}"
    bsgs_options="dont_reduce_arch_graph"
  else
    schreier_sims="$schreier_sims_"
    bsgs_options=""
  fi

  outfile="$RESULT_DIR/${board}_${implementation}_${schreier_sims_}.txt"
  outfile="${outfile//-/_}"

  if [ -e "$outfile" ]; then
    echo "skipping $outfile..."
    return
  else
    echo "creating $outfile..."
  fi

  results=$(LUA_PATH="$LUA_PATH" \
    ./profile/source/schreier_sims -i "$implementation" \
                                   -s "$schreier_sims" \
                                   -t explicit \
                                   --bsgs-options="$bsgs_options" \
                                   -a "../resources/resources/$board.lua" \
                                   --num-discarded-runs $NUM_DISCARDED_RUNS \
                                   --num-runs $NUM_RUNS)

  echo "runtime" > "$outfile"
  echo "$results" | tail -n +2 | sed 's/RESULT: \(.*\) s/\1/' >> "$outfile"
}

declare -a boards=(
"parallella" "exynos" "haec")

declare -a implementations=(
"gap" "mpsym")

declare -a schreier_sims_variants_mpsym=(
"deterministic" "random" "random-no-guarantee")

declare -a schreier_sims_variants_gap=(
"deterministic")

for board in "${boards[@]}"; do
  for implementation in "${implementations[@]}"; do
    if [ "$implementation" = "mpsym" ]; then
      schreier_sims_variants=("${schreier_sims_variants_mpsym[@]}")
    else
      schreier_sims_variants=("${schreier_sims_variants_gap[@]}")
    fi

    for schreier_sims in "${schreier_sims_variants[@]}"; do
      run_schreier_sims "$board" "$implementation" "$schreier_sims"
    done
  done
done
